{"version":3,"sources":["components/Nav.js","components/Home.js","components/About.js","components/Gallery.js","components/Photo.js","components/News.js","components/Test.js","App.js","serviceWorker.js","index.js"],"names":["Nav","navStyle","color","className","style","to","Home","About","Gallery","useEffect","fetchItems","useState","items","setItems","a","fetch","data","json","map","item","href","url","target","rel","key","title","src","thumbnailUrl","alt","Photo","require","config","path","News","getNews","articles","setArticles","search","setSearch","query","setQuery","process","articlesAll","console","log","onSubmit","e","preventDefault","type","placeholder","value","onChange","article","urlToImage","slice","description","Test","first","last","names","setNames","warningText","document","querySelector","firstName","setFirstName","lastName","setLastName","textContent","prevNames","id","length","name","App","exact","component","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.3bad7290.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"../App.css\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nfunction Nav() {\r\n  const navStyle = {\r\n    color: \"white\",\r\n  };\r\n\r\n  return (\r\n    <nav>\r\n      <h3>Logo</h3>\r\n      <ul className=\"nav-links\">\r\n        <Link style={navStyle} to=\"/about\">\r\n          <li>About</li>\r\n        </Link>\r\n        <Link style={navStyle} to=\"/gallery\">\r\n          <li>Gallery</li>\r\n        </Link>\r\n        <Link style={navStyle} to=\"/news\">\r\n          <li>News</li>\r\n        </Link>\r\n        <Link style={navStyle} to=\"/test\">\r\n          <li>Test</li>\r\n        </Link>\r\n      </ul>\r\n    </nav>\r\n  );\r\n}\r\n\r\nexport default Nav;\r\n","import React from \"react\";\r\nimport \"../App.css\";\r\n\r\nfunction Home() {\r\n  return (\r\n    <div className=\"page page-home\">\r\n      <header className=\"page-header home-header\">\r\n        <h1>Home Page</h1>\r\n      </header>\r\n      <p>Home page's contents </p>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Home;\r\n","import React from \"react\";\r\nimport \"../App.css\";\r\n\r\nfunction About() {\r\n  return (\r\n    <div className=\"page page-about\">\r\n      <header className=\"page-header about-header\">\r\n        <h1>About Page</h1>\r\n      </header>\r\n      <p>About page's contents </p>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default About;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport \"../App.css\";\r\n\r\nfunction Gallery() {\r\n  useEffect(() => {\r\n    fetchItems();\r\n  }, []);\r\n\r\n  const [items, setItems] = useState([]);\r\n\r\n  const fetchItems = async () => {\r\n    const data = await fetch(\"https://jsonplaceholder.typicode.com/photos\");\r\n    const items = await data.json();\r\n    setItems(items);\r\n  };\r\n\r\n  return (\r\n    <div className=\"page page-gallery\">\r\n      <header className=\"page-header gallery-header\">\r\n        <h1>Gallery Page</h1>\r\n      </header>\r\n      <div className=\"grid\">\r\n        {items.map((item) => (\r\n          <a\r\n            href={item.url}\r\n            target=\"_blank\"\r\n            rel=\"noopener noreferrer\"\r\n            className=\"card\"\r\n            key={item.title}\r\n          >\r\n            <div className=\"card-title-container\">\r\n              <h2 className=\"card-title\">{item.title}</h2>\r\n            </div>\r\n            <img\r\n              className=\"card-body\"\r\n              src={item.thumbnailUrl}\r\n              alt={item.title}\r\n            ></img>\r\n          </a>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Gallery;\r\n","import React from \"react\";\r\nimport \"../App.css\";\r\n// import { Link } from \"react-router-dom\";\r\n\r\nfunction Photo() {\r\n  return (\r\n    <div className=\"page page-photo\">\r\n      <header className=\"page-header photo-header\">\r\n        <h1>Photo Page</h1>\r\n      </header>\r\n      <div></div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Photo;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport \"../App.css\";\r\n\r\nrequire(\"dotenv\").config({ path: \"./config.env\" });\r\n\r\nconst News = () => {\r\n  useEffect(() => {\r\n    getNews();\r\n  }, []);\r\n  const [articles, setArticles] = useState([]);\r\n\r\n  const [search, setSearch] = useState(\"\");\r\n  const [query, setQuery] = useState(\"coronavirus\");\r\n\r\n  useEffect(() => {\r\n    getNews();\r\n  }, [query]);\r\n\r\n  const getNews = async () => {\r\n    const APP_ID = process.env.REACT_APP_API_KEY;\r\n    const data = await fetch(\r\n      `https://newsapi.org/v2/everything?q=${query}}&from=2020-04-10&language=en&sortBy=publishedAt&apiKey=${APP_ID}`\r\n    );\r\n    const articlesAll = await data.json();\r\n    const articles = articlesAll.articles;\r\n    console.log(\"articles \", articles);\r\n    setArticles(articles);\r\n  };\r\n\r\n  const updateSearch = (e) => {\r\n    setSearch(e.target.value);\r\n    console.log(search);\r\n  };\r\n\r\n  const getSearch = (e) => {\r\n    e.preventDefault();\r\n    if (!search) return;\r\n    setQuery(search);\r\n    setSearch(\"\");\r\n  };\r\n\r\n  return (\r\n    <div className=\"page page-news\">\r\n      <header className=\"page-header header-news\">\r\n        <h1>News Page</h1>\r\n      </header>\r\n      <form onSubmit={getSearch} className=\"search-form\">\r\n        <input\r\n          className=\"search-bar\"\r\n          type=\"text\"\r\n          placeholder=\"Enter a topic to read more...\"\r\n          value={search}\r\n          onChange={updateSearch}\r\n        />\r\n        <button className=\"search-button\" type=\"submit\">\r\n          Search\r\n        </button>\r\n      </form>\r\n      <div className=\"articles\">\r\n        {articles.map((article) => (\r\n          <div className=\"article\" key={article.title}>\r\n            <div className=\"article-thumbnail\">\r\n              <img\r\n                src={article.urlToImage}\r\n                alt={article.title.slice(0, 30)}\r\n              ></img>\r\n            </div>\r\n            <div className=\"article-text\">\r\n              <a target=\"_blank\" rel=\"noopener noreferrer\" href={article.url}>\r\n                <h4 className=\"article-title\">{article.title}</h4>\r\n              </a>\r\n              <p>{article.description}</p>\r\n            </div>\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default News;\r\n","import React, { useState } from \"react\";\r\nimport \"../App.css\";\r\n\r\nfunction Test() {\r\n  const [names, setNames] = useState([\r\n    { first: \"first name #1\", last: \"last name #1\" },\r\n    { first: \"first name #2\", last: \"last name #2\" },\r\n    { first: \"first name #3\", last: \"last name #3\" },\r\n    { first: \"first name #4\", last: \"last name #4\" },\r\n    { first: \"first name #5\", last: \"last name #5\" },\r\n  ]);\r\n\r\n  let warningText = document.querySelector(\".additional-info\");\r\n  const addName = (e) => {\r\n    e.preventDefault();\r\n    // console.log(\"Warning Text: \", warningText);\r\n    if (firstName === \"\" || lastName === \"\") {\r\n      //   console.log(\"Please enter all fields.\");\r\n      warningText.textContent = \"Please enter both a first and last name.\";\r\n    } else {\r\n      warningText.textContent = \"\";\r\n      setNames((prevNames) => [\r\n        ...prevNames,\r\n        {\r\n          id: names.length,\r\n          first: firstName,\r\n          last: lastName,\r\n        },\r\n      ]);\r\n      setFirstName(\"\");\r\n      setLastName(\"\");\r\n    }\r\n  };\r\n\r\n  const [firstName, setFirstName] = useState(\"\");\r\n  const [lastName, setLastName] = useState(\"\");\r\n\r\n  return (\r\n    <div>\r\n      <form onSubmit={addName}>\r\n        <input\r\n          onChange={(e) => setFirstName(e.target.value)}\r\n          type=\"text\"\r\n          value={firstName}\r\n          placeholder=\"first name\"\r\n        />\r\n        <input\r\n          onChange={(e) => setLastName(e.target.value)}\r\n          type=\"text\"\r\n          value={lastName}\r\n          placeholder=\"last name\"\r\n        />\r\n\r\n        <button>aaaaaaaaaaaaa</button>\r\n      </form>\r\n      <p className=\"additional-info\"></p>\r\n      <ul>\r\n        {names.map((name) => (\r\n          <li key={name.id}>\r\n            {name.first}, {name.last}\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Test;\r\n","import React from \"react\";\nimport \"./App.css\";\nimport Nav from \"./components/Nav\";\nimport Home from \"./components/Home\";\nimport About from \"./components/About\";\nimport Gallery from \"./components/Gallery\";\nimport Photo from \"./components/Photo\";\nimport News from \"./components/News\";\nimport Test from \"./components/Test\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\n\nfunction App() {\n  return (\n    <Router>\n      <div className=\"App\">\n        <div className=\"app-container\">\n          <Nav />\n          <div className=\"page\">\n            <Switch>\n              <Route exact path=\"/\" component={Home} />\n              <Route path=\"/about\" component={About} />\n              <Route exact path=\"/gallery\" component={Gallery} />\n              <Route path=\"/gallery/:id\" component={Photo} />\n              <Route path=\"/news\" component={News} />\n              <Route path=\"/test\" component={Test} />\n            </Switch>\n          </div>\n        </div>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}